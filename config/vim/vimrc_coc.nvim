syntax on
set hidden
set nocompatible

set expandtab
set noswapfile
set ignorecase
set cmdheight=2
set shortmess=aFc
set signcolumn=yes
filetype plugin indent on
set backspace=indent,eol,start

"""""""""""""""""""""""""""""Plug settings""""""""""""""""""""""""""
call plug#begin('~/.vim/Plug/')
Plug 'vim-scripts/a.vim'
Plug 'Mizuchi/STL-Syntax'
"Plug 'ap/vim-buftabline'
"Plug 'Shougo/echodoc.vim'
Plug 'scrooloose/nerdtree'
Plug 'jlanzarotta/bufexplorer'
"Plug 'skywind3000/asyncrun.vim'
Plug 'bfrg/vim-cpp-modern'
Plug 'neoclide/coc.nvim', {'branch': 'release'}
Plug 'Yggdroot/LeaderF', { 'do': './install.sh' }
call plug#end()

nnoremap ;  :
let mapleader=','
colorscheme molokai
nnoremap <leader>w  <c-w>
nnoremap <leader>ts :NERDTreeToggle<CR>

let g:NERDTreeQuitOnOpen = 0

" >>>>>>>>>>>>>>>>>>> config coc start >>>>>>>>>>>>>>>>>>>>>>>>>
nmap <leader>gd <Plug>(coc-definition)
nnoremap <Plug>(coc-definition) :<C-u>call CocActionAsync('jumpDefinition')<CR>

nmap <leader>gt <Plug>(coc-type-definition)
nnoremap <silent> <leader>lo  :<C-u>CocList outline<cr>
nnoremap <silent> <leader>lc  :<C-u>CocList commands<cr>
nnoremap <silent> <leader>ld  :<C-u>CocList diagnostics<cr>


inoremap <expr> <Tab> pumvisible() ? "\<C-n>" : "\<Tab>"
inoremap <expr> <S-Tab> pumvisible() ? "\<C-p>" : "\<S-Tab>"
autocmd! CompleteDone * if pumvisible() == 0 | pclose | endif
"<<<<<<<<<<<<<<<<<<<< end coc concif <<<<<<<<<<<<<<<<<<<<<

" >>>>>>>>>>>>>>>>>>> config leaderF >>>>>>>>>>>>>>>>>>>>>>>>>
let g:Lf_ShortcutF = '<C-P>'
if executable("rg")
  " recall last search. If the result window is closed, reopen it.
  noremap <leader>go :<C-U>Leaderf! rg --stayOpen --recall<CR>
  " search word under cursor, the pattern is treated as regex, and enter normal mode directly
  noremap <leader>fc :<C-U><C-R>=printf("Leaderf! rg -e %s ", expand("<cword>"))<CR>
  " search word under cursor literally only in current buffer
  noremap <leader>fb :<C-U><C-R>=printf("Leaderf! rg -F --current-buffer -e %s ", expand("<cword>"))<CR>
endif
" <<<<<<<<<<<<<<<<<<<<< end leaderF <<<<<<<<<<<<<<<<<<<<<<<<<<

" c++0x lambda expr indent
au Filetype cpp,c,objc
    \ setlocal cindent |
    \ setlocal cinoptions=l1 |
    \ setlocal cinoptions+=:0 |
    \ setlocal cino=l1,j1,(0,ws,Ws |
    \ setlocal expandtab tabstop=2 shiftwidth=2
